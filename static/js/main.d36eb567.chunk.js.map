{"version":3,"sources":["utils/uuid.js","utilities/BaseUtility.ts","utilities/Echo.ts","utilities/Help.ts","locations/Location.ts","locations/LocationManifest.ts","store.ts","utilities/Ls.ts","utilities/WhoAmI.ts","utilities/Look.ts","utilities/Cd.ts","utilities/Time.ts","utilities/UtilityManifest.ts","components/Terminal.tsx","components/App.tsx","index.tsx"],"names":["b","a","Math","random","toString","replace","BaseUtility","command","helpDescription","_params","Echo","args","_ref","writeToConsole","join","Promise","resolve","Help","length","util","UtilityManifest","concat","Object","keys","Location","descriptions","slug","classCallCheck","this","neighborSlugs","map","LocationManifest","loading","text","hasRun","ActionTypes","initialState","location","loadingLocation","previousLocationStack","consoleInteractive","store","createStore","state","arguments","undefined","action","type","SET_LOCATION","objectSpread","value","PUSH_LOCATION_STACK","toConsumableArray","POP_LOCATION_STACK","slice","LOCK_CONSOLE","RELEASE_CONSOLE","getCurrentLocation","getState","Ls","sort","TAB_WIDTH","WhoAmI","responses","_this2","forEach","response","index","window","setTimeout","Look","timeAccumulator","description","i","timer","Cd","newLocation","dispatch","nullPromise","goToPreviousLocation","neighbors","find","Time","Date","getTime","inputPrompt","Terminal","terminalHistory","content","id","uuid","commandHistory","currentPlaceInHistory","inputEl","consoleWriters","handleKeyDown","e","_this","revokeConsoleWriters","key","goBackInHistory","moveCursorToEnd","goForwardInHistory","preventDefault","tabComplete","inputValue","_this$inputValue$spli","split","_this$inputValue$spli2","slicedToArray","currentVal","options","filter","indexOf","reduce","memo","option","setState","selectionStart","getRevocableConsoleWriter","revoked","revoke","string","writer","handleSubmit","addToCommandHistory","_value$split","_value$split2","toArray","utilityName","utility","revocableConsoleWriter","push","run","then","react_default","createElement","className","onClick","focus","onKeyDown","historyItem","props","onSubmit","ref","React","Component","connect","INITIAL_LOCATION_SLUG","App","possibleConstructorReturn","getPrototypeOf","call","locations","neighborPair","components_Terminal","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"6lCAGe,SAASA,EAAEC,GACzB,OAAOA,GACHA,EAAsB,GAAhBC,KAAKC,UAAmBF,EAAI,GAAKG,SAAS,KAChD,CAAC,MAAQ,KAAO,KAAO,KAAO,MAAMC,QAAQ,SAAUL,OCDtCM,mDAKpBC,QAAkB,QAClBC,gBAA0B,mDALtBC,GACH,KAAM,2BCLaC,6MAMpBH,QAAU,SACVC,gBACC,8IAPuD,IAAlDG,EAAkDC,EAAlDD,KAEL,OADAE,EADuDD,EAA5CC,gBACIF,EAAKG,KAAK,MAClBC,QAAQC,QAAQ,aAHSV,GCCbW,6MAsBpBV,QAAU,SACVC,gBAAkB,6GAtBsC,IAAlDK,EAAkDD,EAAlDC,eAAgBF,EAAkCC,EAAlCD,KACrB,GAAIA,EAAKO,QAAU,EAAG,CACrB,IAAMC,EAAOC,EAAgBT,EAAK,IAKlCE,EAJoBM,EACjBA,EAAKX,gBADgB,2BAAAa,OAEMV,EAAKG,KAAK,KAFhB,WAMxBD,EAAc,0CAAAQ,OAC6BC,OAAOC,KAChDH,GACCN,KACD,MAJY,4EASf,OAAOC,QAAQC,QAAQ,aAnBSV,kBCSbkB,aACpB,SAAAA,EAAAZ,GAA0C,IAA5Ba,EAA4Bb,EAA5Ba,aAAcC,EAAcd,EAAdc,KAAcJ,OAAAK,EAAA,EAAAL,CAAAM,KAAAJ,GAAAI,KAM1CC,cAA0B,GALzBD,KAAKH,aAAeA,EACpBG,KAAKF,KAAOA,wDAQZ,OAAOE,KAAKC,cAAcC,IAAI,SAAAJ,GAAI,OAAIK,EAAiBL,8BClB5CM,EAAU,IAAIR,EAAS,CACnCE,KAAM,UACND,aAAc,CAAC,CAAEQ,KAAM,cAGlBF,EAA8C,CACnDC,WAGGE,GAAkB,EAoBPH,ICtBHI,EDsBGJ,cCtBHI,qMA8BZ,IAAMC,EAA0B,CAC/BC,SAAUC,EAAgBZ,KAC1Ba,sBAAuB,GACvBC,oBAAoB,GAgDrB,IAAMC,EAAQC,YAtCd,WAGa,IAFZC,EAEYC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAFOR,EACnBU,EACYF,UAAA1B,OAAA,EAAA0B,UAAA,QAAAC,EACZ,OAAQC,EAAOC,MACd,KAAKZ,EAAYa,aAChB,OAAO1B,OAAA2B,EAAA,EAAA3B,CAAA,GACHqB,EADJ,CAECN,SAAUS,EAAOI,QAEnB,KAAKf,EAAYgB,oBAChB,OAAO7B,OAAA2B,EAAA,EAAA3B,CAAA,GACHqB,EADJ,CAECJ,sBAAqB,CACpBO,EAAOI,OADa7B,OAAAC,OAAA8B,EAAA,EAAA9B,CAEjBqB,EAAMJ,0BAGZ,KAAKJ,EAAYkB,mBAChB,OAAO/B,OAAA2B,EAAA,EAAA3B,CAAA,GACHqB,EADJ,CAECJ,sBAAuBI,EAAMJ,sBAAsBe,MAAM,KAE3D,KAAKnB,EAAYoB,aAChB,OAAOjC,OAAA2B,EAAA,EAAA3B,CAAA,GACHqB,EADJ,CAECH,oBAAoB,IAEtB,KAAKL,EAAYqB,gBAChB,OAAOlC,OAAA2B,EAAA,EAAA3B,CAAA,GACHqB,EADJ,CAECH,oBAAoB,IAEtB,QACC,OAAOG,KAMKF,IAER,SAASgB,IACf,OAAO1B,EAAiBU,EAAMiB,WAAWrB,cC9FrBsB,6MAWpBpD,QAAU,OACVC,gBACC,iJALA,OANAK,EADiDD,EAA5CC,gBAEJ4C,IACE5B,cAAc+B,OACd9C,KAAK+C,IAGD9C,QAAQC,QAAQ,aAROV,GCFXwD,6MACZC,UAAsB,CAC7B,mBACA,mDACA,2BACA,6BACA,sCACA,qBACA,sBACA,6BAiBDxD,QAAU,WACVC,gBAAkB,2HAfgC,IAAAwD,EAAApC,KAA5Cf,EAA4CD,EAA5CC,eACL,OAAO,IAAIE,QAAQ,SAAAC,GAClBgD,EAAKD,UAAUE,QAAQ,SAACC,EAAUC,GACjCC,OAAOC,WAAW,WACjBxD,EAAeqD,GAEXC,IAAUH,EAAKD,UAAU7C,OAAS,GACrCF,KAEC,IAAO,KAAOmD,cArBe7D,GCCfgE,6MAwBpB/D,QAAU,SACVC,gBACC,sKAzBiD,IAA5CK,EAA4CD,EAA5CC,eACL,OAAO,IAAIE,QAAQ,SAAAC,GAClB,IAAIuD,EAAkB,EAEhB9C,EAAegC,IAAqBhC,aAE1CA,EAAawC,QAAQ,SAACO,EAAaC,GAClCF,GAC8B,qBAAtBC,EAAYE,MAChB,KACAF,EAAYE,MAEhBN,OAAOC,WAAW,WACjBxD,EAAe2D,EAAYvC,MAEvBwC,IAAMhD,EAAaP,OAAS,GAC/BF,KAECuD,cAnB2BjE,GCCbqE,6MA6CpBpE,QAAU,OACVC,gBACC,0JA7CA,IAAMoE,EAAcnC,EAAMiB,WAAWnB,sBAAsB,GAE3DE,EAAMoC,SAAS,CACd9B,KAAMZ,EAAYkB,qBAGfuB,GACHnC,EAAMoC,SAAS,CACd9B,KAAMZ,EAAYa,aAClBE,MAAO0B,mCAK8C,IAAlDjE,EAAkDC,EAAlDD,KAAME,EAA4CD,EAA5CC,eACLiE,EAAc/D,QAAQC,QAAQ,MAEpC,GAAe,MAAXL,EAAK,GAER,OADAiB,KAAKmD,uBACED,EAGR,IAAMF,EAAcnB,IAAqBuB,UAAUC,KAClD,SAAC5C,GAAD,OAAwBA,EAASX,OAASf,EAAK,KAiBhD,OAdIiE,GACHnC,EAAMoC,SAAS,CACd9B,KAAMZ,EAAYgB,oBAClBD,MAAOT,EAAMiB,WAAWrB,WAGzBI,EAAMoC,SAAS,CACd9B,KAAMZ,EAAYa,aAClBE,MAAO0B,EAAYlD,QAGpBb,EAAc,oBAAAQ,OAAqBV,EAAK,KAGlCmE,SA1CuBxE,GCFX4E,6MAMpB3E,QAAU,SACVC,gBAAkB,gGAJjB,OADAK,EADiDD,EAA5CC,iBACU,IAAIsE,MAAOC,UAAUhF,YAC7BW,QAAQC,QAAQ,aAHSV,GCO5Bc,EAAgD,GAElDc,GAAkB,EAwBPd,gBCJf,SAASiE,IACR,WAAAhE,OAAYoB,EAAMiB,WAAWrB,SAA7B,OAGM,IAAMwB,EAAY,OAEnByB,6MACL3C,MAAuB,CACtB4C,gBAAiB,CAChB,CAAEC,QAAS,qCAAsCC,GAAIC,KACrD,CAAEF,QAAS,2BAA4BC,GAAIC,KAC3C,CACCF,QAAS,gDACTC,GAAIC,MAGNC,eAAgB,GAChBC,uBAAwB,KAGjBC,QAAmC,OACnCC,eAAkC,KAElCC,cAAgB,SAACC,GAGxB,OAFAC,EAAKC,uBAEGF,EAAEG,KACT,IAAK,UACJF,EAAKG,kBACLH,EAAKI,kBACL,MACD,IAAK,YACJJ,EAAKK,qBACLL,EAAKI,kBACL,MACD,IAAK,MACJL,EAAEO,iBACFN,EAAKO,kBAMAA,YAAc,WACrB,GAAwB,KAApBP,EAAKQ,WAAT,CAD2B,IAAAC,EAMCT,EAAKQ,WAAWE,MAAM,KANvBC,EAAAtF,OAAAuF,EAAA,EAAAvF,CAAAoF,EAAA,GAMtBnG,EANsBqG,EAAA,GAMbE,EANaF,EAAA,GAQD,qBAAfE,IACVA,EAAa,IAGd,IAAMC,EAAUtD,IAAqB5B,cAAcmF,OAClD,SAACtF,GAAD,OAA+C,IAA7BA,EAAKuF,QAAQH,KAGT,IAAnBC,EAAQ7F,SAIW,IAAnB6F,EAAQ7F,OAKZ+E,EAAKpF,eACJkG,EAAQG,OACP,SAACC,EAAcC,GAAf,SAAA/F,OAAqC8F,GAArC9F,OAA4CwC,GAA5CxC,OAAwD+F,MANzDnB,EAAKQ,WAAL,GAAApF,OAAqBd,EAArB,KAAAc,OAAgC0F,EAAQ,SAWlCX,gBAAkB,WACzBH,EAAKoB,SACJ,SAAA1E,GACC,OACCA,EAAMiD,wBACNjD,EAAMgD,eAAezE,OAAS,EAEvB,KAGD,CACN0E,sBAAuBjD,EAAMiD,sBAAwB,IAGvD,WACC,IAAMrF,EAAU0F,EAAKtD,MAAMgD,eAC1BM,EAAKtD,MAAMiD,uBAGRrF,IACH0F,EAAKQ,WAAalG,EAAQiF,cAMtBa,gBAAkB,WACzBjC,OAAOC,WAAW,WACb4B,EAAKJ,UACRI,EAAKJ,QAAQyB,eAAiB,MAE7B,MAGIhB,mBAAqB,WAC5BL,EAAKoB,SACJ,SAAA1E,GACC,OAAqC,IAAjCA,EAAMiD,sBACF,KAGD,CACNA,sBAAuBjD,EAAMiD,sBAAwB,IAGvD,YAC2C,IAAtCK,EAAKtD,MAAMiD,wBACdK,EAAKQ,WAAa,IAGnB,IAAMlG,EAAU0F,EAAKtD,MAAMgD,eAC1BM,EAAKtD,MAAMiD,uBAGRrF,IACH0F,EAAKQ,WAAalG,EAAQiF,cAgBtB+B,0BAA4B,WACnC,IAAIC,GAAU,EAEd,MAAO,CACNC,OAAQ,WACPD,GAAU,GAEX3G,eAAgB,SAAC6G,GACXF,GACJvB,EAAKpF,eAAe6G,QAMhBxB,qBAAuB,WAC9BD,EAAKH,eAAe7B,QAAQ,SAAA0D,GAC3BA,EAAOF,WAGRxB,EAAKH,eAAiB,GAEtBrD,EAAMoC,SAAS,CAAE9B,KAAMZ,EAAYqB,qBAG5BoE,aAAe,SAAC5B,GACvBA,EAAEO,iBAEF,IAAMrD,EAAQ+C,EAAKQ,WACnBR,EAAKQ,WAAa,GAElBR,EAAK4B,oBAAoB3E,GANsC,IAAA4E,EAQhC5E,EAAMyD,MAAM,KARoBoB,EAAAzG,OAAA0G,EAAA,EAAA1G,CAAAwG,GAQxDG,EARwDF,EAAA,GAQxCpH,EARwCoH,EAAAzE,MAAA,GAUzD4E,EAAU9G,EAAgB6G,GAIhC,GAFAhC,EAAKpF,eAAL,GAAAQ,OAAuBgE,KAAvBhE,OAAuC6B,IAEnCgF,EAAS,CACZ,IAAMC,EAAyBlC,EAAKsB,4BACpCtB,EAAKH,eAAesC,KAAKD,GAEzB1F,EAAMoC,SAAS,CAAE9B,KAAMZ,EAAYoB,eAEnC2E,EACEG,IAAI,CACJ1H,OACAE,eAAgBsH,EAAuBtH,iBAEvCyH,KAAK,WACL7F,EAAMoC,SAAS,CAAE9B,KAAMZ,EAAYqB,yBAGrCyC,EAAKpF,eAAL,uBAAAQ,OAA2C4G,OAIrCJ,oBAAsB,SAAC3E,GAC9B+C,EAAKoB,SAAS,SAAA1E,GAAK,MAAK,CACvBgD,eAAc,CACb,CACCH,QAAStC,EACTuC,GAAIC,MAHQrE,OAAAC,OAAA8B,EAAA,EAAA9B,CAKVqB,EAAMgD,iBAEVC,uBAAwB,QAIlB/E,eAAiB,SAACqC,GACzB+C,EAAKoB,SAAS,SAAA1E,GAAK,MAAK,CACvB4C,gBAAgBjE,OAAA8B,EAAA,EAAA9B,CACZqB,EAAM4C,iBADKlE,OAAA,CAEd,CACCmE,QAAStC,EACTuC,GAAIC,mFAMC,IAAA1B,EAAApC,KACR,OACC2G,EAAAtI,EAAAuI,cAAA,OACCC,UAAU,WACVC,QAAS,WACR1E,EAAK6B,SAAW7B,EAAK6B,QAAQ8C,SAE9BC,UAAWhH,KAAKmE,eAEhBwC,EAAAtI,EAAAuI,cAAA,OAAKC,UAAU,mBACb7G,KAAKe,MAAM4C,gBAAgB2B,OAC3B,SAACC,EAAM0B,GAAP,SAAAxH,OACI8F,EADJ,MAAA9F,OACawH,EAAYrD,UACzB,KAGD5D,KAAKkH,MAAMtG,oBACX+F,EAAAtI,EAAAuI,cAAA,QAAMC,UAAU,aAAaM,SAAUnH,KAAKgG,cAC3CW,EAAAtI,EAAAuI,cAAA,QAAMC,UAAU,gBAAgBpD,KAChCkD,EAAAtI,EAAAuI,cAAA,SACCC,UAAU,QACV1F,KAAK,OACLiG,IAAK,SAAAhD,GACJhC,EAAK6B,QAAUG,EACfhC,EAAK6B,SAAW7B,EAAK6B,QAAQ8C,gDApHnC,OAAO/G,KAAKiE,QAAUjE,KAAKiE,QAAQ3C,MAAQ,iBAGrBA,GAClBtB,KAAKiE,UACRjE,KAAKiE,QAAQ3C,MAAQA,UAxID+F,IAAMC,WAqQdC,kBAJf,SAAyBxG,GACxB,MAAO,CAAEH,mBAAoBG,EAAMH,qBAGrB2G,CAAyB7D,GClSlC8D,EAAwB,iBAETC,cACpB,SAAAA,EAAYP,GAAc,IAAA7C,EAAA,OAAA3E,OAAAK,EAAA,EAAAL,CAAAM,KAAAyH,GACzBpD,EAAA3E,OAAAgI,EAAA,EAAAhI,CAAAM,KAAAN,OAAAiI,EAAA,EAAAjI,CAAA+H,GAAAG,KAAA5H,KAAMkH,ITKH5G,IAIJA,GAAS,EAETuH,EAAUxF,QAAQ,SAAA5B,GACjBN,EAAiBM,EAASX,MAAQ,IAAIF,EAASa,KAGhD2C,EAAUf,QAAQ,SAAAyF,GACjB3H,EAAiB2H,EAAa,IAAI7H,cAAcuG,KAAKsB,EAAa,IAElE3H,EAAiB2H,EAAa,IAAI7H,cAAcuG,KAAKsB,EAAa,OOhB/DxH,IAIJA,GAAS,EAES,CACjB,IAAIxB,EACJ,IAAIO,EACJ,IAAI0C,EACJ,IAAIG,EACJ,IAAIa,EACJ,IAAIL,EACJ,IAAIY,GAGKjB,QAAQ,SAAAiE,GACjB9G,EAAgB8G,EAAQ3H,SAAW2H,KEdnCzF,EAAMoC,SAAS,CACd9B,KAAMZ,EAAYa,aAClBE,MAAOkG,IARiBnD,wEAazB,OACCsC,EAAAtI,EAAAuI,cAAA,OAAKC,UAAU,QACdF,EAAAtI,EAAAuI,cAACmB,EAAD,cAhB6BV,IAAMC,WCFvCU,IAASC,OACRtB,EAAAtI,EAAAuI,cAACsB,EAAA,EAAD,CAAUrH,MAAOA,GAChB8F,EAAAtI,EAAAuI,cAACuB,EAAD,OAEDC,SAASC,eAAe","file":"static/js/main.d36eb567.chunk.js","sourcesContent":["// simplest UUID implementation\n// https://gist.github.com/jed/982883\n\nexport default function b(a) {\n\treturn a\n\t\t? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n\t\t: ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n}\n","export interface RunParams {\n\targs: string[];\n\twriteToConsole: (arg: string) => void;\n}\n\nexport default class BaseUtility {\n\trun(_params: RunParams): Promise<null> {\n\t\tthrow 'not implemented';\n\t}\n\n\tcommand: string = '';\n\thelpDescription: string = '';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\n\nexport default class Echo extends BaseUtility {\n\trun({ args, writeToConsole }: RunParams): Promise<null> {\n\t\twriteToConsole(args.join(' '));\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'echo';\n\thelpDescription =\n\t\t'Use echo to say something out loud. Example:\\n\\necho Is anyone there?';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport UtilityManifest from './UtilityManifest';\n\nexport default class Help extends BaseUtility {\n\trun({ writeToConsole, args }: RunParams): Promise<null> {\n\t\tif (args.length >= 1) {\n\t\t\tconst util = UtilityManifest[args[0]];\n\t\t\tconst description = util\n\t\t\t\t? util.helpDescription\n\t\t\t\t: `I don't know much about ${args.join(' ')}.`;\n\n\t\t\twriteToConsole(description);\n\t\t} else {\n\t\t\twriteToConsole(\n\t\t\t\t`The following utilities are available: ${Object.keys(\n\t\t\t\t\tUtilityManifest\n\t\t\t\t).join(\n\t\t\t\t\t', '\n\t\t\t\t)}.\\n\\nFor help with any particular utility, write \"help <utility name>\".`\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'help';\n\thelpDescription = 'Use help to make sense of the world.';\n}\n","import LocationManifest from './LocationManifest';\n\ninterface Description {\n\ttext: string;\n\ttimer?: number;\n}\n\ninterface Args {\n\tslug: string;\n\tdescriptions: Description[];\n}\n\nexport default class Location {\n\tconstructor({ descriptions, slug }: Args) {\n\t\tthis.descriptions = descriptions;\n\t\tthis.slug = slug;\n\t}\n\n\tdescriptions: Description[];\n\tneighborSlugs: string[] = [];\n\tslug: string;\n\n\tget neighbors(): Location[] {\n\t\treturn this.neighborSlugs.map(slug => LocationManifest[slug]);\n\t}\n}\n","import Location from './Location';\n\nimport locations from '../data/locations.json';\nimport neighbors from '../data/neighbors.json';\n\nexport const loading = new Location({\n\tslug: 'loading',\n\tdescriptions: [{ text: 'loading' }]\n});\n\nconst LocationManifest: { [s: string]: Location } = {\n\tloading\n};\n\nlet hasRun: boolean = false;\n\nexport function initializeLocations() {\n\tif (hasRun) {\n\t\treturn;\n\t}\n\n\thasRun = true;\n\n\tlocations.forEach(location => {\n\t\tLocationManifest[location.slug] = new Location(location);\n\t});\n\n\tneighbors.forEach(neighborPair => {\n\t\tLocationManifest[neighborPair[0]].neighborSlugs.push(neighborPair[1]);\n\n\t\tLocationManifest[neighborPair[1]].neighborSlugs.push(neighborPair[0]);\n\t});\n}\n\nexport default LocationManifest;\n","import { createStore } from 'redux';\nimport Location from './locations/Location';\nimport LocationManifest, {\n\tloading as loadingLocation\n} from './locations/LocationManifest';\n\nexport interface RootState {\n\tlocation: string;\n\tpreviousLocationStack: string[];\n\tconsoleInteractive: boolean;\n}\n\nexport enum ActionTypes {\n\tSET_LOCATION = 'SET_LOCATION',\n\tPOP_LOCATION_STACK = 'POP_LOCATION_STACK',\n\tPUSH_LOCATION_STACK = 'PUSH_LOCATION_STACK',\n\tLOCK_CONSOLE = 'LOCK_CONSOLE',\n\tRELEASE_CONSOLE = 'RELEASE_CONSOLE'\n}\n\ninterface SetLocation {\n\ttype: ActionTypes.SET_LOCATION;\n\tvalue: string;\n}\n\ninterface PopLocationStack {\n\ttype: ActionTypes.POP_LOCATION_STACK;\n}\n\ninterface PushLocationStack {\n\ttype: ActionTypes.PUSH_LOCATION_STACK;\n\tvalue: string;\n}\n\ninterface LockConsole {\n\ttype: ActionTypes.LOCK_CONSOLE;\n}\n\ninterface ReleaseConsole {\n\ttype: ActionTypes.RELEASE_CONSOLE;\n}\n\nconst initialState: RootState = {\n\tlocation: loadingLocation.slug,\n\tpreviousLocationStack: [],\n\tconsoleInteractive: true\n};\n\ntype CombinedAction =\n\t| SetLocation\n\t| PopLocationStack\n\t| PushLocationStack\n\t| LockConsole\n\t| ReleaseConsole;\n\nfunction reducer(\n\tstate: RootState = initialState,\n\taction: CombinedAction\n): RootState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SET_LOCATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlocation: action.value\n\t\t\t};\n\t\tcase ActionTypes.PUSH_LOCATION_STACK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpreviousLocationStack: [\n\t\t\t\t\taction.value,\n\t\t\t\t\t...state.previousLocationStack\n\t\t\t\t]\n\t\t\t};\n\t\tcase ActionTypes.POP_LOCATION_STACK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpreviousLocationStack: state.previousLocationStack.slice(1)\n\t\t\t};\n\t\tcase ActionTypes.LOCK_CONSOLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tconsoleInteractive: false\n\t\t\t};\n\t\tcase ActionTypes.RELEASE_CONSOLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tconsoleInteractive: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst store = createStore(reducer);\n\nexport default store;\n\nexport function getCurrentLocation(): Location {\n\treturn LocationManifest[store.getState().location];\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport { getCurrentLocation } from '../store';\nimport { TAB_WIDTH } from '../components/Terminal';\n\nexport default class Ls extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\twriteToConsole(\n\t\t\tgetCurrentLocation()\n\t\t\t\t.neighborSlugs.sort()\n\t\t\t\t.join(TAB_WIDTH)\n\t\t);\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'ls';\n\thelpDescription =\n\t\t'ls lists the locations and objects you can reach from where you are now.';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\n\nexport default class WhoAmI extends BaseUtility {\n\tprivate responses: string[] = [\n\t\t\"I don't remember\",\n\t\t'But I am glad you asked. I am glad you are here.',\n\t\t\"I don't know who you are\",\n\t\t'You are an echo of an echo',\n\t\t'You are a grease smudge on a screen',\n\t\t'You were a mistake',\n\t\t'You are a dog lover',\n\t\t'Or you were a dog lover'\n\t];\n\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.responses.forEach((response, index) => {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\twriteToConsole(response);\n\n\t\t\t\t\tif (index === this.responses.length - 1) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}, 1000 + 2500 * index);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommand = 'whoami';\n\thelpDescription = 'Ask a difficult question. Get a difficult response';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport { getCurrentLocation } from '../store';\n\nexport default class Look extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\treturn new Promise(resolve => {\n\t\t\tlet timeAccumulator = 0;\n\n\t\t\tconst descriptions = getCurrentLocation().descriptions;\n\n\t\t\tdescriptions.forEach((description, i) => {\n\t\t\t\ttimeAccumulator +=\n\t\t\t\t\ttypeof description.timer === 'undefined'\n\t\t\t\t\t\t? 1500\n\t\t\t\t\t\t: description.timer;\n\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\twriteToConsole(description.text);\n\n\t\t\t\t\tif (i === descriptions.length - 1) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}, timeAccumulator);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommand = 'look';\n\thelpDescription =\n\t\t'Use look to take some time, to see where you are. Some things take longer to see than others.';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport store, { ActionTypes, getCurrentLocation } from '../store';\nimport Location from '../locations/Location';\n\nexport default class Cd extends BaseUtility {\n\tprivate goToPreviousLocation() {\n\t\tconst newLocation = store.getState().previousLocationStack[0];\n\n\t\tstore.dispatch({\n\t\t\ttype: ActionTypes.POP_LOCATION_STACK\n\t\t});\n\n\t\tif (newLocation) {\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.SET_LOCATION,\n\t\t\t\tvalue: newLocation\n\t\t\t});\n\t\t}\n\t}\n\n\trun({ args, writeToConsole }: RunParams): Promise<null> {\n\t\tconst nullPromise = Promise.resolve(null);\n\n\t\tif (args[0] == '..') {\n\t\t\tthis.goToPreviousLocation();\n\t\t\treturn nullPromise;\n\t\t}\n\n\t\tconst newLocation = getCurrentLocation().neighbors.find(\n\t\t\t(location: Location) => location.slug === args[0]\n\t\t);\n\n\t\tif (newLocation) {\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.PUSH_LOCATION_STACK,\n\t\t\t\tvalue: store.getState().location\n\t\t\t});\n\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.SET_LOCATION,\n\t\t\t\tvalue: newLocation.slug\n\t\t\t});\n\t\t} else {\n\t\t\twriteToConsole(`invalid location ${args[0]}`);\n\t\t}\n\n\t\treturn nullPromise;\n\t}\n\n\tcommand = 'cd';\n\thelpDescription =\n\t\t'Use cd to move to a new location. For example:\\n\\ncd a_cold_cabin';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\n\nexport default class Time extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\twriteToConsole(new Date().getTime().toString());\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'time';\n\thelpDescription = 'time tells you the time';\n}\n","import Echo from './Echo';\nimport Help from './Help';\nimport BaseUtility from './BaseUtility';\nimport Ls from './Ls';\nimport WhoAmI from './WhoAmI';\nimport Look from './Look';\nimport Cd from './Cd';\nimport Time from './Time';\n\nconst UtilityManifest: { [s: string]: BaseUtility } = {};\n\nlet hasRun: boolean = false;\n\nexport function initializeUtilities() {\n\tif (hasRun) {\n\t\treturn;\n\t}\n\n\thasRun = true;\n\n\tconst utilities = [\n\t\tnew Echo(),\n\t\tnew Help(),\n\t\tnew Ls(),\n\t\tnew WhoAmI(),\n\t\tnew Cd(),\n\t\tnew Look(),\n\t\tnew Time()\n\t];\n\n\tutilities.forEach(utility => {\n\t\tUtilityManifest[utility.command] = utility;\n\t});\n}\n\nexport default UtilityManifest;\n","import React from 'react';\nimport uuid from '../utils/uuid';\nimport UtilityManifest from '../utilities/UtilityManifest';\nimport store, { getCurrentLocation, ActionTypes, RootState } from '../store';\nimport { connect } from 'react-redux';\n\ninterface CommandItem {\n\tcontent: string;\n\tid: string;\n}\n\ninterface HistoryItem {\n\tcontent: string;\n\tid: string;\n}\n\ninterface TerminalState {\n\tcommandHistory: CommandItem[];\n\tterminalHistory: HistoryItem[];\n\tcurrentPlaceInHistory: number;\n}\n\ninterface TerminalProps {\n\tconsoleInteractive: boolean;\n}\n\ninterface ConsoleWriter {\n\trevoke: () => void;\n\twriteToConsole: (string: string) => void;\n}\n\nfunction inputPrompt(): string {\n\treturn `~/${store.getState().location} > `;\n}\n\nexport const TAB_WIDTH = '    ';\n\nclass Terminal extends React.Component<TerminalProps, TerminalState> {\n\tstate: TerminalState = {\n\t\tterminalHistory: [\n\t\t\t{ content: 'you are in a cold and quiet forest', id: uuid() },\n\t\t\t{ content: 'rain has recently fallen', id: uuid() },\n\t\t\t{\n\t\t\t\tcontent: 'type \"help\", then press enter, to get started',\n\t\t\t\tid: uuid()\n\t\t\t}\n\t\t],\n\t\tcommandHistory: [],\n\t\tcurrentPlaceInHistory: -1\n\t};\n\n\tprivate inputEl: HTMLInputElement | null = null;\n\tprivate consoleWriters: ConsoleWriter[] = [];\n\n\tprivate handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n\t\tthis.revokeConsoleWriters();\n\n\t\tswitch (e.key) {\n\t\t\tcase 'ArrowUp':\n\t\t\t\tthis.goBackInHistory();\n\t\t\t\tthis.moveCursorToEnd();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown':\n\t\t\t\tthis.goForwardInHistory();\n\t\t\t\tthis.moveCursorToEnd();\n\t\t\t\tbreak;\n\t\t\tcase 'Tab':\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.tabComplete();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t};\n\n\tprivate tabComplete = () => {\n\t\tif (this.inputValue === '') {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Regex could probably do a better job of this\n\t\tlet [command, currentVal] = this.inputValue.split(' ');\n\n\t\tif (typeof currentVal === 'undefined') {\n\t\t\tcurrentVal = '';\n\t\t}\n\n\t\tconst options = getCurrentLocation().neighborSlugs.filter(\n\t\t\t(slug: string) => slug.indexOf(currentVal) === 0\n\t\t);\n\n\t\tif (options.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.length === 1) {\n\t\t\tthis.inputValue = `${command} ${options[0]}`;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.writeToConsole(\n\t\t\toptions.reduce(\n\t\t\t\t(memo: string, option: string) => `${memo}${TAB_WIDTH}${option}`\n\t\t\t)\n\t\t);\n\t};\n\n\tprivate goBackInHistory = () => {\n\t\tthis.setState(\n\t\t\tstate => {\n\t\t\t\tif (\n\t\t\t\t\tstate.currentPlaceInHistory ===\n\t\t\t\t\tstate.commandHistory.length + 1\n\t\t\t\t) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tcurrentPlaceInHistory: state.currentPlaceInHistory + 1\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst command = this.state.commandHistory[\n\t\t\t\t\tthis.state.currentPlaceInHistory\n\t\t\t\t];\n\n\t\t\t\tif (command) {\n\t\t\t\t\tthis.inputValue = command.content;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tprivate moveCursorToEnd = () => {\n\t\twindow.setTimeout(() => {\n\t\t\tif (this.inputEl) {\n\t\t\t\tthis.inputEl.selectionStart = 1000;\n\t\t\t}\n\t\t}, 0);\n\t};\n\n\tprivate goForwardInHistory = () => {\n\t\tthis.setState(\n\t\t\tstate => {\n\t\t\t\tif (state.currentPlaceInHistory === -1) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tcurrentPlaceInHistory: state.currentPlaceInHistory - 1\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (this.state.currentPlaceInHistory === -1) {\n\t\t\t\t\tthis.inputValue = '';\n\t\t\t\t}\n\n\t\t\t\tconst command = this.state.commandHistory[\n\t\t\t\t\tthis.state.currentPlaceInHistory\n\t\t\t\t];\n\n\t\t\t\tif (command) {\n\t\t\t\t\tthis.inputValue = command.content;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tprivate get inputValue(): string {\n\t\treturn this.inputEl ? this.inputEl.value : '';\n\t}\n\n\tprivate set inputValue(value: string) {\n\t\tif (this.inputEl) {\n\t\t\tthis.inputEl.value = value;\n\t\t}\n\t}\n\n\tprivate getRevocableConsoleWriter = (): ConsoleWriter => {\n\t\tlet revoked = false;\n\n\t\treturn {\n\t\t\trevoke: () => {\n\t\t\t\trevoked = true;\n\t\t\t},\n\t\t\twriteToConsole: (string: string) => {\n\t\t\t\tif (!revoked) {\n\t\t\t\t\tthis.writeToConsole(string);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tprivate revokeConsoleWriters = (): void => {\n\t\tthis.consoleWriters.forEach(writer => {\n\t\t\twriter.revoke();\n\t\t});\n\n\t\tthis.consoleWriters = [];\n\n\t\tstore.dispatch({ type: ActionTypes.RELEASE_CONSOLE });\n\t};\n\n\tprivate handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\n\t\tconst value = this.inputValue;\n\t\tthis.inputValue = '';\n\n\t\tthis.addToCommandHistory(value);\n\n\t\tconst [utilityName, ...args] = value.split(' ');\n\n\t\tconst utility = UtilityManifest[utilityName];\n\n\t\tthis.writeToConsole(`${inputPrompt()}${value}`);\n\n\t\tif (utility) {\n\t\t\tconst revocableConsoleWriter = this.getRevocableConsoleWriter();\n\t\t\tthis.consoleWriters.push(revocableConsoleWriter);\n\n\t\t\tstore.dispatch({ type: ActionTypes.LOCK_CONSOLE });\n\n\t\t\tutility\n\t\t\t\t.run({\n\t\t\t\t\targs,\n\t\t\t\t\twriteToConsole: revocableConsoleWriter.writeToConsole\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tstore.dispatch({ type: ActionTypes.RELEASE_CONSOLE });\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.writeToConsole(`I don't know how to ${utilityName}`);\n\t\t}\n\t};\n\n\tprivate addToCommandHistory = (value: string) => {\n\t\tthis.setState(state => ({\n\t\t\tcommandHistory: [\n\t\t\t\t{\n\t\t\t\t\tcontent: value,\n\t\t\t\t\tid: uuid()\n\t\t\t\t},\n\t\t\t\t...state.commandHistory\n\t\t\t],\n\t\t\tcurrentPlaceInHistory: -1\n\t\t}));\n\t};\n\n\tprivate writeToConsole = (value: string) => {\n\t\tthis.setState(state => ({\n\t\t\tterminalHistory: [\n\t\t\t\t...state.terminalHistory,\n\t\t\t\t{\n\t\t\t\t\tcontent: value,\n\t\t\t\t\tid: uuid()\n\t\t\t\t}\n\t\t\t]\n\t\t}));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"terminal\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tthis.inputEl && this.inputEl.focus();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t>\n\t\t\t\t<pre className=\"terminal-buffer\">\n\t\t\t\t\t{this.state.terminalHistory.reduce(\n\t\t\t\t\t\t(memo, historyItem) =>\n\t\t\t\t\t\t\t`${memo}\\n${historyItem.content}`,\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</pre>\n\t\t\t\t{this.props.consoleInteractive && (\n\t\t\t\t\t<form className=\"input-form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<span className=\"input-prompt\">{inputPrompt()}</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tref={e => {\n\t\t\t\t\t\t\t\tthis.inputEl = e;\n\t\t\t\t\t\t\t\tthis.inputEl && this.inputEl.focus();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state: RootState): TerminalProps {\n\treturn { consoleInteractive: state.consoleInteractive };\n}\n\nexport default connect(mapStateToProps)(Terminal);\n","import React from 'react';\nimport Terminal from './Terminal';\nimport { initializeLocations } from '../locations/LocationManifest';\nimport { initializeUtilities } from '../utilities/UtilityManifest';\nimport store, { ActionTypes } from '../store';\n\ninterface Props {}\n\nconst INITIAL_LOCATION_SLUG = 'a_quiet_forest';\n\nexport default class App extends React.Component<Props, {}> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tinitializeLocations();\n\t\tinitializeUtilities();\n\n\t\tstore.dispatch({\n\t\t\ttype: ActionTypes.SET_LOCATION,\n\t\t\tvalue: INITIAL_LOCATION_SLUG\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<Terminal />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}