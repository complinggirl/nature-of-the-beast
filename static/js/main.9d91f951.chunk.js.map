{"version":3,"sources":["utils/uuid.js","utilities/BaseUtility.ts","utilities/Echo.ts","utilities/Help.ts","nouns/Location.ts","nouns/LocationManifest.ts","store.ts","utilities/Ls.ts","utilities/WhoAmI.ts","utilities/Look.ts","utilities/Cd.ts","utilities/Time.ts","nouns/Item.ts","nouns/ItemManifest.ts","utilities/Pickup.ts","utilities/Inventory.ts","utilities/UtilityManifest.ts","components/TerminalBuffer.tsx","components/Terminal.tsx","components/App.tsx","index.tsx"],"names":["b","a","Math","random","toString","replace","BaseUtility","command","helpDescription","_params","Echo","args","_ref","writeToConsole","join","Promise","resolve","Help","length","util","UtilityManifest","concat","Object","keys","Location","descriptions","slug","classCallCheck","this","itemSlugs","neighborSlugs","map","LocationManifest","loading","text","hasRun","ActionTypes","initialState","location","loadingLocation","previousLocationStack","consoleInteractive","inventory","store","createStore","state","arguments","undefined","action","type","SET_LOCATION","objectSpread","value","PUSH_LOCATION_STACK","toConsumableArray","POP_LOCATION_STACK","slice","LOCK_CONSOLE","RELEASE_CONSOLE","ADD_TO_INVENTORY","src_store","getCurrentLocation","getState","Ls","sort","TAB_WIDTH","WhoAmI","responses","_this2","forEach","response","index","window","setTimeout","Look","timeAccumulator","description","i","timer","Cd","newLocation","dispatch","nullPromise","goToPreviousLocation","neighbors","find","Time","Date","getTime","Item","locationSlug","ItemManifest","Pickup","item","indexOf","filter","itemSlug","Inventory","TerminalBuffer","react_default","createElement","className","props","terminalHistory","reduce","memo","historyItem","content","React","Component","inputPrompt","Terminal","id","uuid","commandHistory","currentPlaceInHistory","inputEl","consoleWriters","handleKeyDown","e","_this","revokeConsoleWriters","key","goBackInHistory","moveCursorToEnd","goForwardInHistory","preventDefault","tabComplete","inputValue","_this$inputValue$spli","split","_this$inputValue$spli2","toArray","rest","currentVal","options","newValue","option","setState","selectionStart","getRevocableConsoleWriter","revoked","revoke","string","writer","handleSubmit","addToCommandHistory","_value$split","_value$split2","utilityName","utility","revocableConsoleWriter","push","run","then","onClick","focus","onKeyDown","TerminalBuffer_TerminalBuffer","onSubmit","ref","connect","INITIAL_LOCATION_SLUG","App","possibleConstructorReturn","getPrototypeOf","call","locations","neighborPair","items","components_Terminal","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9d91f951.chunk.js","sourcesContent":["// simplest UUID implementation\n// https://gist.github.com/jed/982883\n\nexport default function b(a) {\n\treturn a\n\t\t? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n\t\t: ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n}\n","export interface RunParams {\n\targs: string[];\n\twriteToConsole: (arg: string) => void;\n}\n\nexport default class BaseUtility {\n\trun(_params: RunParams): Promise<null> {\n\t\tthrow 'not implemented';\n\t}\n\n\tcommand: string = '';\n\thelpDescription: string = '';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\n\nexport default class Echo extends BaseUtility {\n\trun({ args, writeToConsole }: RunParams): Promise<null> {\n\t\twriteToConsole(args.join(' '));\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'echo';\n\thelpDescription =\n\t\t'Use echo to say something out loud. Example:\\n\\necho Is anyone there?';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport UtilityManifest from './UtilityManifest';\n\nexport default class Help extends BaseUtility {\n\trun({ writeToConsole, args }: RunParams): Promise<null> {\n\t\tif (args.length >= 1) {\n\t\t\tconst util = UtilityManifest[args[0]];\n\t\t\tconst description = util\n\t\t\t\t? util.helpDescription\n\t\t\t\t: `I don't know much about ${args.join(' ')}.`;\n\n\t\t\twriteToConsole(description);\n\t\t} else {\n\t\t\twriteToConsole(\n\t\t\t\t`The following utilities are available: ${Object.keys(\n\t\t\t\t\tUtilityManifest\n\t\t\t\t).join(\n\t\t\t\t\t', '\n\t\t\t\t)}.\\n\\nFor help with any particular utility, write \"help <utility name>\".`\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'help';\n\thelpDescription = 'Use help to make sense of the world.';\n}\n","import LocationManifest from './LocationManifest';\n\ninterface Description {\n\ttext: string;\n\ttimer?: number;\n}\n\ninterface Args {\n\tslug: string;\n\tdescriptions: Description[];\n}\n\nexport default class Location {\n\tconstructor({ descriptions, slug }: Args) {\n\t\tthis.descriptions = descriptions;\n\t\tthis.slug = slug;\n\t}\n\n\tdescriptions: Description[];\n\tslug: string;\n\titemSlugs: string[] = [];\n\tneighborSlugs: string[] = [];\n\n\tget neighbors(): Location[] {\n\t\treturn this.neighborSlugs.map(slug => LocationManifest[slug]);\n\t}\n}\n","import Location from './Location';\n\nimport locations from '../data/locations.json';\nimport neighbors from '../data/neighbors.json';\nimport items from '../data/items.json';\n\nexport const loading = new Location({\n\tslug: 'loading',\n\tdescriptions: [{ text: 'loading' }]\n});\n\nconst LocationManifest: { [s: string]: Location } = {\n\tloading\n};\n\nlet hasRun: boolean = false;\n\nexport function initializeLocations() {\n\tif (hasRun) {\n\t\treturn;\n\t}\n\n\thasRun = true;\n\n\tlocations.forEach(location => {\n\t\tLocationManifest[location.slug] = new Location(location);\n\t});\n\n\tneighbors.forEach(neighborPair => {\n\t\tLocationManifest[neighborPair[0]].neighborSlugs.push(neighborPair[1]);\n\n\t\tLocationManifest[neighborPair[1]].neighborSlugs.push(neighborPair[0]);\n\t});\n\n\titems.forEach(item => {\n\t\tLocationManifest[item.locationSlug].itemSlugs.push(item.slug);\n\t});\n}\n\nexport default LocationManifest;\n","import { createStore } from 'redux';\nimport Location from './nouns/Location';\nimport LocationManifest, {\n\tloading as loadingLocation\n} from './nouns/LocationManifest';\n\nexport interface RootState {\n\tlocation: string;\n\tpreviousLocationStack: string[];\n\tconsoleInteractive: boolean;\n\tinventory: string[];\n}\n\nexport enum ActionTypes {\n\tSET_LOCATION = 'SET_LOCATION',\n\tPOP_LOCATION_STACK = 'POP_LOCATION_STACK',\n\tPUSH_LOCATION_STACK = 'PUSH_LOCATION_STACK',\n\tLOCK_CONSOLE = 'LOCK_CONSOLE',\n\tRELEASE_CONSOLE = 'RELEASE_CONSOLE',\n\tADD_TO_INVENTORY = 'ADD_TO_INVENTORY'\n}\n\ninterface SetLocation {\n\ttype: ActionTypes.SET_LOCATION;\n\tvalue: string;\n}\n\ninterface PopLocationStack {\n\ttype: ActionTypes.POP_LOCATION_STACK;\n}\n\ninterface PushLocationStack {\n\ttype: ActionTypes.PUSH_LOCATION_STACK;\n\tvalue: string;\n}\n\ninterface LockConsole {\n\ttype: ActionTypes.LOCK_CONSOLE;\n}\n\ninterface ReleaseConsole {\n\ttype: ActionTypes.RELEASE_CONSOLE;\n}\n\ninterface AddToInventory {\n\ttype: ActionTypes.ADD_TO_INVENTORY;\n\tvalue: string;\n}\n\nconst initialState: RootState = {\n\tlocation: loadingLocation.slug,\n\tpreviousLocationStack: [],\n\tconsoleInteractive: true,\n\tinventory: []\n};\n\ntype CombinedAction =\n\t| SetLocation\n\t| PopLocationStack\n\t| PushLocationStack\n\t| LockConsole\n\t| ReleaseConsole\n\t| AddToInventory;\n\nfunction reducer(\n\tstate: RootState = initialState,\n\taction: CombinedAction\n): RootState {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SET_LOCATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlocation: action.value\n\t\t\t};\n\t\tcase ActionTypes.PUSH_LOCATION_STACK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpreviousLocationStack: [\n\t\t\t\t\taction.value,\n\t\t\t\t\t...state.previousLocationStack\n\t\t\t\t]\n\t\t\t};\n\t\tcase ActionTypes.POP_LOCATION_STACK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpreviousLocationStack: state.previousLocationStack.slice(1)\n\t\t\t};\n\t\tcase ActionTypes.LOCK_CONSOLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tconsoleInteractive: false\n\t\t\t};\n\t\tcase ActionTypes.RELEASE_CONSOLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tconsoleInteractive: true\n\t\t\t};\n\t\tcase ActionTypes.ADD_TO_INVENTORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinventory: [...state.inventory, action.value]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst store = createStore(reducer);\n\nexport default store;\n\nexport function getCurrentLocation(): Location {\n\treturn LocationManifest[store.getState().location];\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport { getCurrentLocation } from '../store';\nimport { TAB_WIDTH } from '../components/Terminal';\n\nexport default class Ls extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\tconst slugs = [\n\t\t\t...getCurrentLocation().neighborSlugs.sort(),\n\t\t\t...getCurrentLocation().itemSlugs.sort()\n\t\t];\n\n\t\twriteToConsole(slugs.join(TAB_WIDTH));\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'ls';\n\thelpDescription =\n\t\t'ls lists the locations and objects you can reach from where you are now.';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\n\nexport default class WhoAmI extends BaseUtility {\n\tprivate responses: string[] = [\n\t\t\"I don't remember\",\n\t\t'But I am glad you asked. I am glad you are here.',\n\t\t\"I don't know who you are\",\n\t\t'You are an echo of an echo',\n\t\t'You are a grease smudge on a screen',\n\t\t'You were a mistake',\n\t\t'You are a dog lover',\n\t\t'Or you were a dog lover'\n\t];\n\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.responses.forEach((response, index) => {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\twriteToConsole(response);\n\n\t\t\t\t\tif (index === this.responses.length - 1) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}, 1000 + 2500 * index);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommand = 'whoami';\n\thelpDescription = 'Ask a difficult question. Get a difficult response';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport { getCurrentLocation } from '../store';\n\nexport default class Look extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\treturn new Promise(resolve => {\n\t\t\tlet timeAccumulator = 0;\n\n\t\t\tconst descriptions = getCurrentLocation().descriptions;\n\n\t\t\tdescriptions.forEach((description, i) => {\n\t\t\t\ttimeAccumulator +=\n\t\t\t\t\ttypeof description.timer === 'undefined'\n\t\t\t\t\t\t? 1500\n\t\t\t\t\t\t: description.timer;\n\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\twriteToConsole(description.text);\n\n\t\t\t\t\tif (i === descriptions.length - 1) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}, timeAccumulator);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommand = 'look';\n\thelpDescription =\n\t\t'Use look to take some time, to see where you are. Some things take longer to see than others.';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport store, { ActionTypes, getCurrentLocation } from '../store';\nimport Location from '../nouns/Location';\n\nexport default class Cd extends BaseUtility {\n\tprivate goToPreviousLocation() {\n\t\tconst newLocation = store.getState().previousLocationStack[0];\n\n\t\tstore.dispatch({\n\t\t\ttype: ActionTypes.POP_LOCATION_STACK\n\t\t});\n\n\t\tif (newLocation) {\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.SET_LOCATION,\n\t\t\t\tvalue: newLocation\n\t\t\t});\n\t\t}\n\t}\n\n\trun({ args, writeToConsole }: RunParams): Promise<null> {\n\t\tconst nullPromise = Promise.resolve(null);\n\n\t\tif (args[0] == '..') {\n\t\t\tthis.goToPreviousLocation();\n\t\t\treturn nullPromise;\n\t\t}\n\n\t\tconst newLocation = getCurrentLocation().neighbors.find(\n\t\t\t(location: Location) => location.slug === args[0]\n\t\t);\n\n\t\tif (newLocation) {\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.PUSH_LOCATION_STACK,\n\t\t\t\tvalue: store.getState().location\n\t\t\t});\n\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.SET_LOCATION,\n\t\t\t\tvalue: newLocation.slug\n\t\t\t});\n\t\t} else {\n\t\t\twriteToConsole(`invalid location ${args[0]}`);\n\t\t}\n\n\t\treturn nullPromise;\n\t}\n\n\tcommand = 'cd';\n\thelpDescription =\n\t\t'Use cd to move to a new location. For example:\\n\\ncd a_cold_cabin';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\n\nexport default class Time extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\twriteToConsole(new Date().getTime().toString());\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'time';\n\thelpDescription = 'time tells you the time';\n}\n","interface Args {\n\tslug: string;\n\tlocationSlug: string;\n\tdescription: string;\n}\n\nexport default class Item {\n\tconstructor({ description, slug, locationSlug }: Args) {\n\t\tthis.description = description;\n\t\tthis.slug = slug;\n\t\tthis.locationSlug = locationSlug;\n\t}\n\n\tdescription: string;\n\tslug: string;\n\tlocationSlug: string;\n}\n","import Item from './Item';\nimport items from '../data/items.json';\n\nconst ItemManifest: { [s: string]: Item } = {};\n\nlet hasRun: boolean = false;\n\nexport function initializeItems() {\n\tif (hasRun) {\n\t\treturn;\n\t}\n\n\thasRun = true;\n\n\titems.forEach(item => {\n\t\tItemManifest[item.slug] = new Item(item);\n\t});\n}\n\nexport default ItemManifest;\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport store, { ActionTypes, getCurrentLocation } from '../store';\nimport ItemManifest from '../nouns/ItemManifest';\n\nexport default class Pickup extends BaseUtility {\n\trun({ args, writeToConsole }: RunParams): Promise<null> {\n\t\tconst item = args[0];\n\n\t\tif (\n\t\t\tItemManifest[item] &&\n\t\t\tgetCurrentLocation().itemSlugs.indexOf(item) > -1\n\t\t) {\n\t\t\t// TODO: remove item from location\n\n\t\t\tgetCurrentLocation().itemSlugs = getCurrentLocation().itemSlugs.filter(\n\t\t\t\titemSlug => itemSlug !== item\n\t\t\t);\n\n\t\t\tstore.dispatch({\n\t\t\t\ttype: ActionTypes.ADD_TO_INVENTORY,\n\t\t\t\tvalue: item\n\t\t\t});\n\n\t\t\twriteToConsole(`I have picked up the ${item}`);\n\t\t} else {\n\t\t\twriteToConsole(`There is no ${item} here`);\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'pickup';\n\thelpDescription =\n\t\t'pickup will allow you to add an object to your inventory';\n}\n","import BaseUtility, { RunParams } from './BaseUtility';\nimport store from '../store';\nimport { TAB_WIDTH } from '../components/Terminal';\n\nexport default class Inventory extends BaseUtility {\n\trun({ writeToConsole }: RunParams): Promise<null> {\n\t\twriteToConsole(store.getState().inventory.join(TAB_WIDTH));\n\t\treturn Promise.resolve(null);\n\t}\n\n\tcommand = 'inv';\n\thelpDescription =\n\t\t'List all the items currently in your inventory. To use an item, write \"use <item>\"';\n}\n","import Echo from './Echo';\nimport Help from './Help';\nimport BaseUtility from './BaseUtility';\nimport Ls from './Ls';\nimport WhoAmI from './WhoAmI';\nimport Look from './Look';\nimport Cd from './Cd';\nimport Time from './Time';\nimport Pickup from './Pickup';\nimport Inventory from './Inventory';\n\nconst UtilityManifest: { [s: string]: BaseUtility } = {};\n\nlet hasRun: boolean = false;\n\nexport function initializeUtilities() {\n\tif (hasRun) {\n\t\treturn;\n\t}\n\n\thasRun = true;\n\n\tconst utilities = [\n\t\tnew Echo(),\n\t\tnew Help(),\n\t\tnew Ls(),\n\t\tnew WhoAmI(),\n\t\tnew Cd(),\n\t\tnew Look(),\n\t\tnew Time(),\n\t\tnew Pickup(),\n\t\tnew Inventory()\n\t];\n\n\tutilities.forEach(utility => {\n\t\tUtilityManifest[utility.command] = utility;\n\t});\n}\n\nexport default UtilityManifest;\n","import React from 'react';\nimport { HistoryItem } from './Terminal';\n\ninterface Props {\n\tterminalHistory: HistoryItem[];\n}\n\nexport default class TerminalBuffer extends React.Component<Props, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<pre className=\"terminal-buffer\">\n\t\t\t\t{this.props.terminalHistory.reduce(\n\t\t\t\t\t(memo, historyItem) => `${memo}\\n${historyItem.content}`,\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</pre>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport uuid from '../utils/uuid';\nimport UtilityManifest from '../utilities/UtilityManifest';\nimport store, { getCurrentLocation, ActionTypes, RootState } from '../store';\nimport { connect } from 'react-redux';\nimport TerminalBuffer from './TerminalBuffer';\n\ninterface CommandItem {\n\tcontent: string;\n\tid: string;\n}\n\nexport interface HistoryItem {\n\tcontent: string;\n\tid: string;\n}\n\ninterface TerminalState {\n\tcommandHistory: CommandItem[];\n\tterminalHistory: HistoryItem[];\n\tcurrentPlaceInHistory: number;\n}\n\ninterface TerminalProps {\n\tconsoleInteractive: boolean;\n}\n\ninterface ConsoleWriter {\n\trevoke: () => void;\n\twriteToConsole: (string: string) => void;\n}\n\nfunction inputPrompt(): string {\n\treturn `~/${store.getState().location} > `;\n}\n\nexport const TAB_WIDTH = '    ';\n\nclass Terminal extends React.Component<TerminalProps, TerminalState> {\n\tstate: TerminalState = {\n\t\tterminalHistory: [\n\t\t\t{ content: 'you are in a cold and quiet forest', id: uuid() },\n\t\t\t{ content: 'rain has recently fallen', id: uuid() },\n\t\t\t{\n\t\t\t\tcontent: 'type \"help\", then press enter, to get started',\n\t\t\t\tid: uuid()\n\t\t\t}\n\t\t],\n\t\tcommandHistory: [],\n\t\tcurrentPlaceInHistory: -1\n\t};\n\n\tprivate inputEl: HTMLInputElement | null = null;\n\tprivate consoleWriters: ConsoleWriter[] = [];\n\n\tprivate handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n\t\tthis.revokeConsoleWriters();\n\n\t\tswitch (e.key) {\n\t\t\tcase 'ArrowUp':\n\t\t\t\tthis.goBackInHistory();\n\t\t\t\tthis.moveCursorToEnd();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown':\n\t\t\t\tthis.goForwardInHistory();\n\t\t\t\tthis.moveCursorToEnd();\n\t\t\t\tbreak;\n\t\t\tcase 'Tab':\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.tabComplete();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t};\n\n\tprivate tabComplete = () => {\n\t\tif (this.inputValue === '') {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Regex could probably do a better job of this\n\t\tconst [command, ...rest] = this.inputValue.split(' ');\n\n\t\tlet currentVal = rest[rest.length - 1];\n\n\t\tif (typeof currentVal === 'undefined') {\n\t\t\tcurrentVal = '';\n\t\t}\n\n\t\tconst options = [\n\t\t\t...getCurrentLocation().neighborSlugs,\n\t\t\t...getCurrentLocation().itemSlugs\n\t\t].filter((slug: string) => slug.indexOf(currentVal) === 0);\n\n\t\tswitch (options.length) {\n\t\t\tcase 0:\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tconst newValue = [\n\t\t\t\t\tcommand,\n\t\t\t\t\t...rest.slice(0, rest.length - 1),\n\t\t\t\t\toptions[0]\n\t\t\t\t].join(' ');\n\t\t\t\tthis.inputValue = newValue;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.writeToConsole(\n\t\t\t\t\toptions.reduce(\n\t\t\t\t\t\t(memo: string, option: string) =>\n\t\t\t\t\t\t\t`${memo}${TAB_WIDTH}${option}`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn;\n\t};\n\n\tprivate goBackInHistory = () => {\n\t\tthis.setState(\n\t\t\tstate => {\n\t\t\t\tif (\n\t\t\t\t\tstate.currentPlaceInHistory ===\n\t\t\t\t\tstate.commandHistory.length + 1\n\t\t\t\t) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tcurrentPlaceInHistory: state.currentPlaceInHistory + 1\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst command = this.state.commandHistory[\n\t\t\t\t\tthis.state.currentPlaceInHistory\n\t\t\t\t];\n\n\t\t\t\tif (command) {\n\t\t\t\t\tthis.inputValue = command.content;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tprivate moveCursorToEnd = () => {\n\t\twindow.setTimeout(() => {\n\t\t\tif (this.inputEl) {\n\t\t\t\tthis.inputEl.selectionStart = 1000;\n\t\t\t}\n\t\t}, 0);\n\t};\n\n\tprivate goForwardInHistory = () => {\n\t\tthis.setState(\n\t\t\tstate => {\n\t\t\t\tif (state.currentPlaceInHistory === -1) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tcurrentPlaceInHistory: state.currentPlaceInHistory - 1\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (this.state.currentPlaceInHistory === -1) {\n\t\t\t\t\tthis.inputValue = '';\n\t\t\t\t}\n\n\t\t\t\tconst command = this.state.commandHistory[\n\t\t\t\t\tthis.state.currentPlaceInHistory\n\t\t\t\t];\n\n\t\t\t\tif (command) {\n\t\t\t\t\tthis.inputValue = command.content;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tprivate get inputValue(): string {\n\t\treturn this.inputEl ? this.inputEl.value : '';\n\t}\n\n\tprivate set inputValue(value: string) {\n\t\tif (this.inputEl) {\n\t\t\tthis.inputEl.value = value;\n\t\t}\n\t}\n\n\tprivate getRevocableConsoleWriter = (): ConsoleWriter => {\n\t\tlet revoked = false;\n\n\t\treturn {\n\t\t\trevoke: () => {\n\t\t\t\trevoked = true;\n\t\t\t},\n\t\t\twriteToConsole: (string: string) => {\n\t\t\t\tif (!revoked) {\n\t\t\t\t\tthis.writeToConsole(string);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tprivate revokeConsoleWriters = (): void => {\n\t\tthis.consoleWriters.forEach(writer => {\n\t\t\twriter.revoke();\n\t\t});\n\n\t\tthis.consoleWriters = [];\n\n\t\tstore.dispatch({ type: ActionTypes.RELEASE_CONSOLE });\n\t};\n\n\tprivate handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\n\t\tconst value = this.inputValue;\n\t\tthis.inputValue = '';\n\n\t\tthis.addToCommandHistory(value);\n\n\t\tconst [utilityName, ...args] = value.split(' ');\n\n\t\tconst utility = UtilityManifest[utilityName];\n\n\t\tthis.writeToConsole(`${inputPrompt()}${value}`);\n\n\t\tif (utility) {\n\t\t\tconst revocableConsoleWriter = this.getRevocableConsoleWriter();\n\t\t\tthis.consoleWriters.push(revocableConsoleWriter);\n\n\t\t\tstore.dispatch({ type: ActionTypes.LOCK_CONSOLE });\n\n\t\t\tutility\n\t\t\t\t.run({\n\t\t\t\t\targs,\n\t\t\t\t\twriteToConsole: revocableConsoleWriter.writeToConsole\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tstore.dispatch({ type: ActionTypes.RELEASE_CONSOLE });\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.writeToConsole(`I don't know how to ${utilityName}`);\n\t\t}\n\t};\n\n\tprivate addToCommandHistory = (value: string) => {\n\t\tthis.setState(state => ({\n\t\t\tcommandHistory: [\n\t\t\t\t{\n\t\t\t\t\tcontent: value,\n\t\t\t\t\tid: uuid()\n\t\t\t\t},\n\t\t\t\t...state.commandHistory\n\t\t\t],\n\t\t\tcurrentPlaceInHistory: -1\n\t\t}));\n\t};\n\n\tprivate writeToConsole = (value: string) => {\n\t\tthis.setState(state => ({\n\t\t\tterminalHistory: [\n\t\t\t\t...state.terminalHistory,\n\t\t\t\t{\n\t\t\t\t\tcontent: value,\n\t\t\t\t\tid: uuid()\n\t\t\t\t}\n\t\t\t]\n\t\t}));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"terminal\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tthis.inputEl && this.inputEl.focus();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t>\n\t\t\t\t<TerminalBuffer terminalHistory={this.state.terminalHistory} />\n\n\t\t\t\t{this.props.consoleInteractive && (\n\t\t\t\t\t<form className=\"input-form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<span className=\"input-prompt\">{inputPrompt()}</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tref={e => {\n\t\t\t\t\t\t\t\tthis.inputEl = e;\n\t\t\t\t\t\t\t\tthis.inputEl && this.inputEl.focus();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state: RootState): TerminalProps {\n\treturn { consoleInteractive: state.consoleInteractive };\n}\n\nexport default connect(mapStateToProps)(Terminal);\n","import React from 'react';\nimport Terminal from './Terminal';\nimport { initializeLocations } from '../nouns/LocationManifest';\nimport { initializeUtilities } from '../utilities/UtilityManifest';\nimport store, { ActionTypes } from '../store';\nimport { initializeItems } from '../nouns/ItemManifest';\n\ninterface Props {}\n\nconst INITIAL_LOCATION_SLUG = 'a_quiet_forest';\n\nexport default class App extends React.Component<Props, {}> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tinitializeLocations();\n\t\tinitializeUtilities();\n\t\tinitializeItems();\n\n\t\tstore.dispatch({\n\t\t\ttype: ActionTypes.SET_LOCATION,\n\t\t\tvalue: INITIAL_LOCATION_SLUG\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<Terminal />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}